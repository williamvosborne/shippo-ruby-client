#!/usr/bin/env ruby
#
# © 2016 Shippo, Inc.
#
# License: MIT
#
# This example demonstrates how to get the tracking status of a shipment
# Please set +SHIPPO_TOKEN+ in the environment before running it.
#
# You can also set +SHIPPO_DEBUG+ to see detailed printouts of objects returned.
#
#

lib = File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require 'bundler/setup'
require 'shippo'
require 'shippo/api/category'
require 'shippo/exceptions/api_error'
require 'awesome_print'
require 'json'

Shippo::API.token = ENV['SHIPPO_TOKEN']

# Simple wrapper class to help us print objects to the STDOUT
class ExampleHelper
  def self.log_operation(msg)
    printf '%s', msg
    result = yield
    puts 'OK'
    result
  rescue Exception => e
    raise(e)
  end

  def self.dump_object(instance, msg = nil)
    return unless Shippo::API.debug?
    sep
    puts "#{msg.upcase}:" if msg
    puts "\#<#{instance.class.inspect}:0x#{instance.object_id.to_s(16)}> ⇒ "
    ap instance
    sep
    # See https://github.com/goshippo/shippo-ruby-client#resource-id-and-other-object-fields
    puts "Shippo object id: #{instance.object.id}"
    sep
  end

  def self.sep
    puts '—' * (ENV['COLUMNS'] || 80)
  end

  # Retries up to 10 times to retrieve a valid
  # Batch (which takes time to become 'VALID' from
  # 'VALIDATING' after initially being created).
  def self.retrieve_valid_batch(id)
    retries = 10
    retrieve = nil
    until retries == 0 do
      sleep 1
      retrieve = Shippo::Batch::get(id)
      break if retrieve[:object_status] == 'VALID'
      retries -= 1
    end
    STDERR.puts 'Unable to retrieve VALID Batch object' unless retrieve
    retrieve
  end
end

# Create address_from object
address_from = {
  :object_purpose => 'PURCHASE',
  :name           => 'Mr Hippo',
  :company        => 'Shippo',
  :street1        => '215 Clayton St.',
  :street2        => '',
  :city           => 'San Francisco',
  :state          => 'CA',
  :zip            => '94117',
  :country        => 'US',
  :phone          => '+1 555 341 9393',
  :email          => 'support@goshippo.com' }

# Create address_to object
address_to   = {
  :object_purpose => 'PURCHASE',
  :name           => 'Mrs Hippo"',
  :company        => 'San Diego Zoo',
  :street1        => '2920 Zoo Drive',
  :city           => 'San Diego',
  :state          => 'CA',
  :zip            => '92101',
  :country        => 'US',
  :phone          => '+1 555 341 9393',
  :email          => 'hippo@goshippo.com' }

# Create parcel object
parcel       = {
  :length        => 5,
  :width         => 2,
  :height        => 5,
  :distance_unit => :in,
  :weight        => 2,
  :mass_unit     => :lb }

default_carrier_account = ENV['SHIPPO_TEST_CARRIER_ACCOUNT']
if !default_carrier_account
  STDERR.puts 'Please set your SHIPPO_TEST_CARRIER_ACCOUNT environment variable.'
  STDERR.puts
  STDERR.puts 'You can do this by setting it to your USPS carrier account object ID:

  Steps
  --------------------------------------------------------------
  1. curl https://api.goshippo.com/carrier_accounts/ \
    -H "Authorization: ShippoToken <TEST_API_TOKEN>"

  2. Look for {"carrier": "usps"} and find its "object_id"

  3. export SHIPPO_TEST_CARRIER_ACCOUNT=<USPS_CARRIER_OBJECT_ID>
  --------------------------------------------------------------
  '
  STDERR.puts
  exit 1
end
hash = { :default_carrier_account => default_carrier_account,
         :default_servicelevel_token => 'usps_priority',
         :label_filetype => 'ZPLII',
         :metadata => 'BATCH #170',
         :batch_shipments => [
           {
             :shipment => {
               :object_purpose => 'PURCHASE',
               :address_from   => address_from,
               :address_to     => address_to,
               :parcel         => parcel,
               :async          => false
             }
           }
         ]
       }

begin
  batch = ExampleHelper.log_operation 'Making first API call to create a Batch... ' do
    Shippo::Batch.create(hash)
  end
  # Allow time for the Batch to fully process
  retrieve = ExampleHelper.log_operation 'Making API call to retrieve newly created batch' do
    ExampleHelper.retrieve_valid_batch(batch[:object_id])
  end
rescue Shippo::Exceptions::APIServerError => e
  puts "Server returned an error:\n#{e}"
  exit 3
rescue Shippo::Exceptions::ConnectionError
  puts 'Error connecting to remote host. Is your Internet working?'
  exit 2
rescue Shippo::Exceptions::AuthenticationError
  if Shippo::API.token
    puts "Token '#{Shippo::API.token}' does not appear to be valid."
    puts 'Access denied.'
  else
    puts 'Please set authentication token in the environment:'
    puts 'export SHIPPO_TOKEN="<your token here>"'
    puts 'and re-run the example.'
  end
  exit 1
end

STDERR.puts retrieve
if retrieve
  puts "Batch status    : #{retrieve[:object_status]}"
  puts "metadata        : #{retrieve[:metadata]}"
else
  puts 'Batch ERROR'
end